id: gcs_load_data
namespace: ecotrend

inputs:
  - id: datatype
    type: SELECT
    displayName: Select data type
    values:
      [
        SP500,
        NASDAQ100,
        DGS10,
        VIXCLS,
        EFFR,
        CPIAUCSL,
        PCEPI,
        CIVPART,
        INDPRO,
        CSUSHPISA,
      ]
    defaults: SP500

  - id: start_date
    type: DATE
    displayName: Start Date
    defaults: '2015-01-01'

  - id: end_date
    type: STRING
    displayName: End Date
    defaults: '{{ now() | date("yyyy-MM-dd") }}'

variables:
  file: '{{inputs.datatype}}_data.parquet'
  gcs_file: "gs://{{kv('GCP_BUCKET_NAME')}}/{{vars.file}}"
  data: "{{outputs.fetch_fred_data.outputFiles[inputs.datatype ~ '_data.parquet']}}"

tasks:
  - id: fetch_fred_data
    type: io.kestra.plugin.scripts.python.Script
    beforeCommands:
      - pip install fredapi pandas pyarrow
    docker:
      image: python:slim
    warningOnStdErr: false
    script: |
      import os
      import pandas as pd
      import pyarrow
      from fredapi import Fred

      fred = Fred(api_key="{{kv('FRED_API_KEY')}}")

      # Parse dates
      start = "{{ inputs.start_date }}"
      end = "{{ render(inputs.end_date) }}"  # ISO datetime cut to date

      data = fred.get_series(
        '{{inputs.datatype}}',
        observation_start=start,
        observation_end=end
      )

      df = pd.DataFrame(data, columns=["{{inputs.datatype}}"])
      df.index.name = "date"
      df.reset_index(inplace=True)

      df.to_parquet("{{vars.file}}", engine="pyarrow", index=False)

    outputFiles:
      - '{{vars.file}}'

  - id: upload_to_gcs
    type: io.kestra.plugin.gcp.gcs.Upload
    from: '{{render(vars.data)}}'
    to: '{{render(vars.gcs_file)}}'

  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
    description: If you'd like to explore Kestra outputs, disable it.
    disabled: false

pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_SERVICE_ACCOUNT')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"
      fredapikey: "{{kv('FRED_API_KEY')}}"
